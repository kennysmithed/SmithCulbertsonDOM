knitr::opts_chunk$set(echo = TRUE)
options(width = 300)
library(ggplot2)
library(plyr)
library(dplyr)
library(lme4)
library(stargazer)
#load utility functions
source('../_Utilities.R')
#define colours - don't think Jenny likes these, but easy to change!
#First one is neutral, e.g. for totals
my.colours <- c("#808080","#EA7D00","#006DE9")
exp3Data <- read.csv('../RawData/exp3Data.csv')
#at some point we switched terminology in the paper from Agents Can/Cannot be Patients to Subjects Can/Cannot Be Objects - need to correct this throughout
exp3Data$EventType <- revalue(exp3Data$EventType,
c("Agents Cannot Be Patients"="Subjects Cannot Be Objects",
"Agents Can Be Patients"="Subjects Can Be Objects"))
#day needs to be a factor for the stats
exp3Data$Day <- as.factor(exp3Data$Day)
#Subjects Cannot Be Objects needs to be reference level
exp3Data$EventType <- as.factor(exp3Data$EventType)
exp3Data$EventType <- relevel(exp3Data$EventType,
ref="Subjects Cannot Be Objects")
#got this from https://stackoverflow.com/questions/12840294/counting-unique-distinct-values-by-group-in-a-data-frame
exp3.counts.table <- ddply(exp3Data,~Day+EventType+ProportionMarked,summarise,N=length(unique(workerId)))
knitr::opts_chunk$set(echo = TRUE)
options(width = 300)
library(ggplot2)
library(plyr)
library(dplyr)
library(lme4)
library(stargazer)
#load utility functions
source('../_Utilities.R')
#define colours - don't think Jenny likes these, but easy to change!
#First one is neutral, e.g. for totals
my.colours <- c("#808080","#EA7D00","#006DE9")
exp3Data <- read.csv('../RawData/exp3Data.csv')
#at some point we switched terminology in the paper from Agents Can/Cannot be Patients to Subjects Can/Cannot Be Objects - need to correct this throughout
exp3Data$EventType <- revalue(exp3Data$EventType,
c("Agents Cannot Be Patients"="Subjects Cannot Be Objects",
"Agents Can Be Patients"="Subjects Can Be Objects"))
#day needs to be a factor for the stats
exp3Data$Day <- as.factor(exp3Data$Day)
#Subjects Cannot Be Objects needs to be reference level
exp3Data$EventType <- as.factor(exp3Data$EventType)
exp3Data$EventType <- relevel(exp3Data$EventType,
ref="Subjects Cannot Be Objects")
#got this from https://stackoverflow.com/questions/12840294/counting-unique-distinct-values-by-group-in-a-data-frame
exp3.counts.table <- ddply(exp3Data,~Day+EventType+ProportionMarked,summarise,N=length(unique(workerId)))
head(exp3Data)
exp3Data <- read.csv('../RawData/exp3Data.csv')
head(exp3Data)
exp3Data <- read.csv('../RawData/exp3Data.csv')
#at some point we switched terminology in the paper from Agents Can/Cannot be Patients to Subjects Can/Cannot Be Objects - need to correct this throughout
exp3Data$EventType <- revalue(exp3Data$EventType,
c("Agents Cannot Be Patients"="Subjects Cannot Be Objects",
"Agents Can Be Patients"="Subjects Can Be Objects"))
#day needs to be a factor for the stats
exp3Data$Day <- as.factor(exp3Data$Day)
#Subjects Cannot Be Objects needs to be reference level
exp3Data$EventType <- as.factor(exp3Data$EventType)
exp3Data$EventType <- relevel(exp3Data$EventType,
ref="Subjects Cannot Be Objects")
#got this from https://stackoverflow.com/questions/12840294/counting-unique-distinct-values-by-group-in-a-data-frame
exp3.counts.table <- ddply(exp3Data,~Day+EventType+ProportionMarked,summarise,N=length(unique(workerId)))
knitr::opts_chunk$set(echo = TRUE)
options(width = 300)
library(ggplot2)
library(plyr)
library(dplyr)
library(lme4)
library(stargazer)
#load utility functions
source('../_Utilities.R')
#define colours - don't think Jenny likes these, but easy to change!
#First one is neutral, e.g. for totals
my.colours <- c("#808080","#EA7D00","#006DE9")
exp3Data <- read.csv('../RawData/exp3Data.csv')
#at some point we switched terminology in the paper from Agents Can/Cannot be Patients to Subjects Can/Cannot Be Objects - need to correct this throughout
exp3Data$EventType <- revalue(exp3Data$EventType,
c("Agents Cannot Be Patients"="Subjects Cannot Be Objects",
"Agents Can Be Patients"="Subjects Can Be Objects"))
#day needs to be a factor for the stats
exp3Data$Day <- as.factor(exp3Data$Day)
#Subjects Cannot Be Objects needs to be reference level
exp3Data$EventType <- as.factor(exp3Data$EventType)
exp3Data$EventType <- relevel(exp3Data$EventType,
ref="Subjects Cannot Be Objects")
#got this from https://stackoverflow.com/questions/12840294/counting-unique-distinct-values-by-group-in-a-data-frame
exp3.counts.table <- ddply(exp3Data,~Day+EventType+ProportionMarked,summarise,N=length(unique(workerId)))
exp3.counts.table
exp3.counts.table2 <- ddply(exp3Data,~EventType+ProportionMarked,summarise,N=length(unique(workerId)))
exp3.counts.table2
exp3.counts.table3 <- ddply(exp3Data,~Day,summarise,N=length(unique(workerId)))
exp3.counts.table3
exp3.scores.by.block <- aggregate(score~workerId+Day+Block,data=exp3Data,FUN=mean)
exp3.failed.noun.comprehension <- subset(exp3.scores.by.block,Block=='NounComprehension2' & score<0.7)
exp3.failed.sentence.comprehension <- subset(exp3.scores.by.block,Block=='SentenceComprehension1' & score<0.7)
ddply(exp3.failed.noun.comprehension,~Day,summarise,N_excluded=length(unique(workerId)))
ddply(exp3.failed.sentence.comprehension,~Day,summarise,N_excluded=length(unique(workerId)))
levels(exp3Data$EventType)
exp3Data$EventTypeR <- exp3Data$EventType
exp3Data$EventTypeR <- relevel(exp3Data$EventTypeR, ref='Subjects Can Be Objects')
knitr::opts_chunk$set(echo = TRUE)
options(width = 300)
library(ggplot2)
library(plyr)
library(dplyr)
library(lme4)
library(stargazer)
#load utility functions
source('../_Utilities.R')
#define colours - don't think Jenny likes these, but easy to change!
#First one is neutral, e.g. for totals
my.colours <- c("#808080","#EA7D00","#006DE9")
exp3Data <- read.csv('../RawData/exp3Data.csv')
#at some point we switched terminology in the paper from Agents Can/Cannot be Patients to Subjects Can/Cannot Be Objects - need to correct this throughout
exp3Data$EventType <- revalue(exp3Data$EventType,
c("Agents Cannot Be Patients"="Subjects Cannot Be Objects",
"Agents Can Be Patients"="Subjects Can Be Objects"))
#day needs to be a factor for the stats
exp3Data$Day <- as.factor(exp3Data$Day)
#Subjects Cannot Be Objects needs to be reference level
exp3Data$EventType <- as.factor(exp3Data$EventType)
exp3Data$EventType <- relevel(exp3Data$EventType,
ref="Subjects Cannot Be Objects")
#got this from https://stackoverflow.com/questions/12840294/counting-unique-distinct-values-by-group-in-a-data-frame
exp3.counts.table <- ddply(exp3Data,~Day+EventType+ProportionMarked,summarise,N=length(unique(workerId)))
exp3.counts.table
exp3.counts.table2 <- ddply(exp3Data,~EventType+ProportionMarked,summarise,N=length(unique(workerId)))
exp3.counts.table2
exp3.counts.table3 <- ddply(exp3Data,~Day,summarise,N=length(unique(workerId)))
exp3.counts.table3
exp3.scores.by.block <- aggregate(score~workerId+Day+Block,data=exp3Data,FUN=mean)
exp3.failed.noun.comprehension <- subset(exp3.scores.by.block,Block=='NounComprehension2' & score<0.7)
exp3.failed.sentence.comprehension <- subset(exp3.scores.by.block,Block=='SentenceComprehension1' & score<0.7)
ddply(exp3.failed.noun.comprehension,~Day,summarise,N_excluded=length(unique(workerId)))
ddply(exp3.failed.sentence.comprehension,~Day,summarise,N_excluded=length(unique(workerId)))
exp3.score.summary <- aggregate(score~casemarked+Animacy+Day+EventType+workerId,data=subset(exp3Data,Block=="SentenceComprehension1"),FUN=mean)
exp3.score.summary$casemarked <- revalue(as.factor(exp3.score.summary$casemarked),
c("FALSE"="Patient not casemarked",
"TRUE"="Patient casemarked"))
#for the dotplot, there are too many participants at ceiling to show the dots - instead I am going
#to withhold those dots and add a numerical annotation
exp3.score.summary$IsPerfect <- ifelse(exp3.score.summary$score==1,1,0)
exp3.score.perfect.ns <- data.frame(summarize(group_by(subset(exp3.score.summary,IsPerfect==1),Day,Animacy,casemarked,EventType,.drop = FALSE),n()))
exp3.score.perfect.ns <- plyr::rename(exp3.score.perfect.ns,c("n.."="count"))
ggplot(data=exp3.score.summary, aes(x=Day, y=score,fill=Animacy,colour=Animacy)) +
#facet by condition and marking
facet_grid(EventType~casemarked) +
#points and CIs for score by animacy
stat_summary(geom='errorbar', fun.data='mean_cl_boot',fun.ymin="min", fun.ymax="max",
width=0.3,position=position_dodge(0.9),colour='black') +
stat_summary(geom='point', fun.y='mean', position=position_dodge(0.9),size=3) +
stat_summary(geom='point', fun.y='mean', position=position_dodge(0.9),size=3,shape=1,colour='black') +
#horizontal line showing chance
geom_hline(yintercept=0.5,linetype=3) +
#by-participant data
geom_dotplot(data=subset(exp3.score.summary,IsPerfect==0),
aes(x=Day, y=score, shape=Animacy),binaxis = "y",
stackdir = "centerwhole",stackratio=1,alpha=0.5,dotsize=1,
position=position_dodge(0.9),binpositions='all',binwidth=1/100) +
geom_text(data=exp3.score.perfect.ns,aes(x=Day,y=1.05,label=count),position=position_dodge(0.9),size=3,colour='black') +
#force all points to be circles, and exclude from legend
scale_shape_manual(values=c(19,19),guide=FALSE)+
#then various axis/legend stuff
xlab("Day") +
theme_bw() +
#ylab("Proportion correct responses") +
scale_y_continuous(name="Proportion correct responses",breaks=seq(0,1,0.25)) +
theme(legend.title=element_blank(),legend.position="top") +
scale_fill_manual(values=my.colours[2:3],breaks=c("FALSE", "TRUE"),labels=c("Inanimate patient", "Animate patient")) +
scale_colour_manual(values=my.colours[2:3],breaks=c("FALSE", "TRUE"),labels=c("Inanimate patient", "Animate patient")) +
ggsave("../Figures/exp3-identification-accuracy.pdf",width=9, height=9)
exp3low.score.summary <- aggregate(score~casemarked+Animacy+Day+EventType+workerId,
data=subset(exp3Data,Block=="SentenceComprehension1" & ProportionMarked=="40% Casemarked"),
FUN=mean)
exp3low.score.summary$casemarked <- revalue(as.factor(exp3low.score.summary$casemarked),
c("FALSE"="Patient not casemarked",
"TRUE"="Patient casemarked"))
#for the dotplot, there are too many participants at ceiling to show the dots - instead I am going
#to withhold those dots and add a numerical annotation
exp3low.score.summary$IsPerfect <- ifelse(exp3low.score.summary$score==1,1,0)
exp3low.score.perfect.ns <- data.frame(summarize(group_by(subset(exp3low.score.summary,IsPerfect==1),Day,Animacy,casemarked,EventType,.drop = FALSE),n()))
exp3low.score.perfect.ns <- plyr::rename(exp3low.score.perfect.ns,c("n.."="count"))
ggplot(data=exp3low.score.summary, aes(x=Day, y=score,fill=Animacy,colour=Animacy)) +
#facet by condition and marking
facet_grid(EventType~casemarked) +
#points and CIs for score by animacy
stat_summary(geom='errorbar', fun.data='mean_cl_boot',fun.ymin="min", fun.ymax="max",
width=0.3,position=position_dodge(0.9),colour='black') +
stat_summary(geom='point', fun.y='mean', position=position_dodge(0.9),size=3) +
stat_summary(geom='point', fun.y='mean', position=position_dodge(0.9),size=3,shape=1,colour='black') +
#horizontal line showing chance
geom_hline(yintercept=0.5,linetype=3) +
#by-participant data
geom_dotplot(data=subset(exp3low.score.summary,IsPerfect==0),
aes(x=Day, y=score, shape=Animacy),binaxis = "y",
stackdir = "centerwhole",stackratio=1,alpha=0.5,dotsize=1,
position=position_dodge(0.9),binpositions='all',binwidth=1/100) +
geom_text(data=exp3low.score.perfect.ns,aes(x=Day,y=1.05,label=count),position=position_dodge(0.9),size=3,colour='black') +
#force all points to be circles, and exclude from legend
scale_shape_manual(values=c(19,19),guide=FALSE)+
#then various axis/legend stuff
xlab("Day") +
theme_bw() +
#ylab("Proportion correct responses") +
scale_y_continuous(name="Proportion correct responses",breaks=seq(0,1,0.25)) +
theme(legend.title=element_blank(),legend.position="top") +
scale_fill_manual(values=my.colours[2:3],breaks=c("FALSE", "TRUE"),labels=c("Inanimate patient", "Animate patient")) +
scale_colour_manual(values=my.colours[2:3],breaks=c("FALSE", "TRUE"),labels=c("Inanimate patient", "Animate patient")) +
ggsave("../Figures/exp3-low-identification-accuracy.pdf",width=9, height=9)
exp3high.score.summary <- aggregate(score~casemarked+Animacy+Day+EventType+workerId,
data=subset(exp3Data,Block=="SentenceComprehension1" & ProportionMarked=="60% Casemarked"),
FUN=mean)
exp3high.score.summary$casemarked <- revalue(as.factor(exp3high.score.summary$casemarked),
c("FALSE"="Patient not casemarked",
"TRUE"="Patient casemarked"))
#for the dotplot, there are too many participants at ceiling to show the dots - instead I am going
#to withhold those dots and add a numerical annotation
exp3high.score.summary$IsPerfect <- ifelse(exp3high.score.summary$score==1,1,0)
exp3high.score.perfect.ns <- data.frame(summarize(group_by(subset(exp3high.score.summary,IsPerfect==1),Day,Animacy,casemarked,EventType,.drop = FALSE),n()))
exp3high.score.perfect.ns <- plyr::rename(exp3high.score.perfect.ns,c("n.."="count"))
ggplot(data=exp3high.score.summary, aes(x=Day, y=score,fill=Animacy,colour=Animacy)) +
#facet by condition and marking
facet_grid(EventType~casemarked) +
#points and CIs for score by animacy
stat_summary(geom='errorbar', fun.data='mean_cl_boot',fun.ymin="min", fun.ymax="max",
width=0.3,position=position_dodge(0.9),colour='black') +
stat_summary(geom='point', fun.y='mean', position=position_dodge(0.9),size=3) +
stat_summary(geom='point', fun.y='mean', position=position_dodge(0.9),size=3,shape=1,colour='black') +
#horizontal line showing chance
geom_hline(yintercept=0.5,linetype=3) +
#by-participant data
geom_dotplot(data=subset(exp3high.score.summary,IsPerfect==0),
aes(x=Day, y=score, shape=Animacy),binaxis = "y",
stackdir = "centerwhole",stackratio=1,alpha=0.5,dotsize=1,
position=position_dodge(0.9),binpositions='all',binwidth=1/100) +
geom_text(data=exp3high.score.perfect.ns,aes(x=Day,y=1.05,label=count),position=position_dodge(0.9),size=3,colour='black') +
#force all points to be circles, and exclude from legend
scale_shape_manual(values=c(19,19),guide=FALSE)+
#then various axis/legend stuff
xlab("Day") +
theme_bw() +
#ylab("Proportion correct responses") +
scale_y_continuous(name="Proportion correct responses",breaks=seq(0,1,0.25)) +
theme(legend.title=element_blank(),legend.position="top") +
scale_fill_manual(values=my.colours[2:3],breaks=c("FALSE", "TRUE"),labels=c("Inanimate patient", "Animate patient")) +
scale_colour_manual(values=my.colours[2:3],breaks=c("FALSE", "TRUE"),labels=c("Inanimate patient", "Animate patient")) +
ggsave("../Figures/exp3-low-identification-accuracy.pdf",width=9, height=9)
exp3unmarked.score.summary <- aggregate(score~Animacy+Day+
EventType+ProportionMarked+workerId,
data=subset(exp3Data,Block=="SentenceComprehension1" & !casemarked),
FUN=mean)
#for the dotplot, there are too many participants at ceiling to show the dots - instead I am going
#to withhold those dots and add a numerical annotation
exp3unmarked.score.summary$IsPerfect <- ifelse(exp3unmarked.score.summary$score==1,1,0)
exp3unmarked.score.perfect.ns <- data.frame(summarize(group_by(subset(exp3unmarked.score.summary,IsPerfect==1),Day,Animacy,EventType,ProportionMarked,.drop = FALSE),n()))
exp3unmarked.score.perfect.ns <- plyr::rename(exp3unmarked.score.perfect.ns,c("n.."="count"))
ggplot(data=exp3unmarked.score.summary, aes(x=Day, y=score,fill=Animacy,colour=Animacy)) +
#facet by condition and marking
facet_grid(EventType~ProportionMarked) +
#points and CIs for score by animacy
stat_summary(geom='errorbar', fun.data='mean_cl_boot',fun.ymin="min", fun.ymax="max",
width=0.3,position=position_dodge(0.9),colour='black') +
stat_summary(geom='point', fun.y='mean', position=position_dodge(0.9),size=3) +
stat_summary(geom='point', fun.y='mean', position=position_dodge(0.9),size=3,shape=1,colour='black') +
#horizontal line showing chance
geom_hline(yintercept=0.5,linetype=3) +
#by-participant data
geom_dotplot(data=subset(exp3unmarked.score.summary,IsPerfect==0),
aes(x=Day, y=score, shape=Animacy),binaxis = "y",
stackdir = "centerwhole",stackratio=1,alpha=0.5,dotsize=1,
position=position_dodge(0.9),binpositions='all',binwidth=1/100) +
geom_text(data=exp3unmarked.score.perfect.ns,aes(x=Day,y=1.05,label=count),position=position_dodge(0.9),size=3,colour='black') +
#force all points to be circles, and exclude from legend
scale_shape_manual(values=c(19,19),guide=FALSE)+
#then various axis/legend stuff
xlab("Day") +
theme_bw() +
#ylab("Proportion correct responses") +
scale_y_continuous(name="Proportion correct responses",breaks=seq(0,1,0.25)) +
theme(legend.title=element_blank(),legend.position="top") +
scale_fill_manual(values=my.colours[2:3],breaks=c("FALSE", "TRUE"),labels=c("Inanimate patient", "Animate patient")) +
scale_colour_manual(values=my.colours[2:3],breaks=c("FALSE", "TRUE"),labels=c("Inanimate patient", "Animate patient")) +
ggsave("../Figures/exp3-unmarked-identification-accuracy.pdf",width=9, height=9)
exp3Data$ProportionMarked <- relevel(as.factor(exp3Data$ProportionMarked),ref="40% Casemarked")
contrasts(exp3Data$ProportionMarked) <- c(-0.5,0.5)
exp3Data$EventTypeR <- exp3Data$EventType
exp3Data$EventTypeR <- relevel(exp3Data$EventTypeR, ref='Subjects Can Be Objects')
contrasts(exp3Data$EventTypeR) <- NULL
exp3.score.model.1r <- glmer(score~ Day * EventTypeR * ProportionMarked  + (1 + Day | workerId),data=subset(exp3Data,Block=="SentenceComprehension1" & Animacy & !casemarked),family=binomial,control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=50000)))
knitr::opts_chunk$set(echo = TRUE)
options(width = 300)
library(ggplot2)
library(plyr)
library(dplyr)
library(lme4)
library(stargazer)
#load utility functions
source('../_Utilities.R')
#define colours - don't think Jenny likes these, but easy to change!
#First one is neutral, e.g. for totals
my.colours <- c("#808080","#EA7D00","#006DE9")
exp3Data <- read.csv('../RawData/exp3Data.csv')
#at some point we switched terminology in the paper from Agents Can/Cannot be Patients to Subjects Can/Cannot Be Objects - need to correct this throughout
exp3Data$EventType <- revalue(exp3Data$EventType,
c("Agents Cannot Be Patients"="Subjects Cannot Be Objects",
"Agents Can Be Patients"="Subjects Can Be Objects"))
#day needs to be a factor for the stats
exp3Data$Day <- as.factor(exp3Data$Day)
#Subjects Cannot Be Objects needs to be reference level
exp3Data$EventType <- as.factor(exp3Data$EventType)
exp3Data$EventType <- relevel(exp3Data$EventType,
ref="Subjects Cannot Be Objects")
#got this from https://stackoverflow.com/questions/12840294/counting-unique-distinct-values-by-group-in-a-data-frame
exp3.counts.table <- ddply(exp3Data,~Day+EventType+ProportionMarked,summarise,N=length(unique(workerId)))
exp3.counts.table
exp3.counts.table2 <- ddply(exp3Data,~EventType+ProportionMarked,summarise,N=length(unique(workerId)))
exp3.counts.table2
exp3.counts.table3 <- ddply(exp3Data,~Day,summarise,N=length(unique(workerId)))
exp3.counts.table3
exp3.scores.by.block <- aggregate(score~workerId+Day+Block,data=exp3Data,FUN=mean)
exp3.failed.noun.comprehension <- subset(exp3.scores.by.block,Block=='NounComprehension2' & score<0.7)
exp3.failed.sentence.comprehension <- subset(exp3.scores.by.block,Block=='SentenceComprehension1' & score<0.7)
ddply(exp3.failed.noun.comprehension,~Day,summarise,N_excluded=length(unique(workerId)))
ddply(exp3.failed.sentence.comprehension,~Day,summarise,N_excluded=length(unique(workerId)))
exp3.score.summary <- aggregate(score~casemarked+Animacy+Day+EventType+workerId,data=subset(exp3Data,Block=="SentenceComprehension1"),FUN=mean)
exp3.score.summary$casemarked <- revalue(as.factor(exp3.score.summary$casemarked),
c("FALSE"="Patient not casemarked",
"TRUE"="Patient casemarked"))
#for the dotplot, there are too many participants at ceiling to show the dots - instead I am going
#to withhold those dots and add a numerical annotation
exp3.score.summary$IsPerfect <- ifelse(exp3.score.summary$score==1,1,0)
exp3.score.perfect.ns <- data.frame(summarize(group_by(subset(exp3.score.summary,IsPerfect==1),Day,Animacy,casemarked,EventType,.drop = FALSE),n()))
exp3.score.perfect.ns <- plyr::rename(exp3.score.perfect.ns,c("n.."="count"))
ggplot(data=exp3.score.summary, aes(x=Day, y=score,fill=Animacy,colour=Animacy)) +
#facet by condition and marking
facet_grid(EventType~casemarked) +
#points and CIs for score by animacy
stat_summary(geom='errorbar', fun.data='mean_cl_boot',fun.ymin="min", fun.ymax="max",
width=0.3,position=position_dodge(0.9),colour='black') +
stat_summary(geom='point', fun.y='mean', position=position_dodge(0.9),size=3) +
stat_summary(geom='point', fun.y='mean', position=position_dodge(0.9),size=3,shape=1,colour='black') +
#horizontal line showing chance
geom_hline(yintercept=0.5,linetype=3) +
#by-participant data
geom_dotplot(data=subset(exp3.score.summary,IsPerfect==0),
aes(x=Day, y=score, shape=Animacy),binaxis = "y",
stackdir = "centerwhole",stackratio=1,alpha=0.5,dotsize=1,
position=position_dodge(0.9),binpositions='all',binwidth=1/100) +
geom_text(data=exp3.score.perfect.ns,aes(x=Day,y=1.05,label=count),position=position_dodge(0.9),size=3,colour='black') +
#force all points to be circles, and exclude from legend
scale_shape_manual(values=c(19,19),guide=FALSE)+
#then various axis/legend stuff
xlab("Day") +
theme_bw() +
#ylab("Proportion correct responses") +
scale_y_continuous(name="Proportion correct responses",breaks=seq(0,1,0.25)) +
theme(legend.title=element_blank(),legend.position="top") +
scale_fill_manual(values=my.colours[2:3],breaks=c("FALSE", "TRUE"),labels=c("Inanimate patient", "Animate patient")) +
scale_colour_manual(values=my.colours[2:3],breaks=c("FALSE", "TRUE"),labels=c("Inanimate patient", "Animate patient")) +
ggsave("../Figures/exp3-identification-accuracy.pdf",width=9, height=9)
exp3low.score.summary <- aggregate(score~casemarked+Animacy+Day+EventType+workerId,
data=subset(exp3Data,Block=="SentenceComprehension1" & ProportionMarked=="40% Casemarked"),
FUN=mean)
exp3low.score.summary$casemarked <- revalue(as.factor(exp3low.score.summary$casemarked),
c("FALSE"="Patient not casemarked",
"TRUE"="Patient casemarked"))
#for the dotplot, there are too many participants at ceiling to show the dots - instead I am going
#to withhold those dots and add a numerical annotation
exp3low.score.summary$IsPerfect <- ifelse(exp3low.score.summary$score==1,1,0)
exp3low.score.perfect.ns <- data.frame(summarize(group_by(subset(exp3low.score.summary,IsPerfect==1),Day,Animacy,casemarked,EventType,.drop = FALSE),n()))
exp3low.score.perfect.ns <- plyr::rename(exp3low.score.perfect.ns,c("n.."="count"))
ggplot(data=exp3low.score.summary, aes(x=Day, y=score,fill=Animacy,colour=Animacy)) +
#facet by condition and marking
facet_grid(EventType~casemarked) +
#points and CIs for score by animacy
stat_summary(geom='errorbar', fun.data='mean_cl_boot',fun.ymin="min", fun.ymax="max",
width=0.3,position=position_dodge(0.9),colour='black') +
stat_summary(geom='point', fun.y='mean', position=position_dodge(0.9),size=3) +
stat_summary(geom='point', fun.y='mean', position=position_dodge(0.9),size=3,shape=1,colour='black') +
#horizontal line showing chance
geom_hline(yintercept=0.5,linetype=3) +
#by-participant data
geom_dotplot(data=subset(exp3low.score.summary,IsPerfect==0),
aes(x=Day, y=score, shape=Animacy),binaxis = "y",
stackdir = "centerwhole",stackratio=1,alpha=0.5,dotsize=1,
position=position_dodge(0.9),binpositions='all',binwidth=1/100) +
geom_text(data=exp3low.score.perfect.ns,aes(x=Day,y=1.05,label=count),position=position_dodge(0.9),size=3,colour='black') +
#force all points to be circles, and exclude from legend
scale_shape_manual(values=c(19,19),guide=FALSE)+
#then various axis/legend stuff
xlab("Day") +
theme_bw() +
#ylab("Proportion correct responses") +
scale_y_continuous(name="Proportion correct responses",breaks=seq(0,1,0.25)) +
theme(legend.title=element_blank(),legend.position="top") +
scale_fill_manual(values=my.colours[2:3],breaks=c("FALSE", "TRUE"),labels=c("Inanimate patient", "Animate patient")) +
scale_colour_manual(values=my.colours[2:3],breaks=c("FALSE", "TRUE"),labels=c("Inanimate patient", "Animate patient")) +
ggsave("../Figures/exp3-low-identification-accuracy.pdf",width=9, height=9)
exp3high.score.summary <- aggregate(score~casemarked+Animacy+Day+EventType+workerId,
data=subset(exp3Data,Block=="SentenceComprehension1" & ProportionMarked=="60% Casemarked"),
FUN=mean)
exp3high.score.summary$casemarked <- revalue(as.factor(exp3high.score.summary$casemarked),
c("FALSE"="Patient not casemarked",
"TRUE"="Patient casemarked"))
#for the dotplot, there are too many participants at ceiling to show the dots - instead I am going
#to withhold those dots and add a numerical annotation
exp3high.score.summary$IsPerfect <- ifelse(exp3high.score.summary$score==1,1,0)
exp3high.score.perfect.ns <- data.frame(summarize(group_by(subset(exp3high.score.summary,IsPerfect==1),Day,Animacy,casemarked,EventType,.drop = FALSE),n()))
exp3high.score.perfect.ns <- plyr::rename(exp3high.score.perfect.ns,c("n.."="count"))
ggplot(data=exp3high.score.summary, aes(x=Day, y=score,fill=Animacy,colour=Animacy)) +
#facet by condition and marking
facet_grid(EventType~casemarked) +
#points and CIs for score by animacy
stat_summary(geom='errorbar', fun.data='mean_cl_boot',fun.ymin="min", fun.ymax="max",
width=0.3,position=position_dodge(0.9),colour='black') +
stat_summary(geom='point', fun.y='mean', position=position_dodge(0.9),size=3) +
stat_summary(geom='point', fun.y='mean', position=position_dodge(0.9),size=3,shape=1,colour='black') +
#horizontal line showing chance
geom_hline(yintercept=0.5,linetype=3) +
#by-participant data
geom_dotplot(data=subset(exp3high.score.summary,IsPerfect==0),
aes(x=Day, y=score, shape=Animacy),binaxis = "y",
stackdir = "centerwhole",stackratio=1,alpha=0.5,dotsize=1,
position=position_dodge(0.9),binpositions='all',binwidth=1/100) +
geom_text(data=exp3high.score.perfect.ns,aes(x=Day,y=1.05,label=count),position=position_dodge(0.9),size=3,colour='black') +
#force all points to be circles, and exclude from legend
scale_shape_manual(values=c(19,19),guide=FALSE)+
#then various axis/legend stuff
xlab("Day") +
theme_bw() +
#ylab("Proportion correct responses") +
scale_y_continuous(name="Proportion correct responses",breaks=seq(0,1,0.25)) +
theme(legend.title=element_blank(),legend.position="top") +
scale_fill_manual(values=my.colours[2:3],breaks=c("FALSE", "TRUE"),labels=c("Inanimate patient", "Animate patient")) +
scale_colour_manual(values=my.colours[2:3],breaks=c("FALSE", "TRUE"),labels=c("Inanimate patient", "Animate patient")) +
ggsave("../Figures/exp3-low-identification-accuracy.pdf",width=9, height=9)
exp3unmarked.score.summary <- aggregate(score~Animacy+Day+
EventType+ProportionMarked+workerId,
data=subset(exp3Data,Block=="SentenceComprehension1" & !casemarked),
FUN=mean)
#for the dotplot, there are too many participants at ceiling to show the dots - instead I am going
#to withhold those dots and add a numerical annotation
exp3unmarked.score.summary$IsPerfect <- ifelse(exp3unmarked.score.summary$score==1,1,0)
exp3unmarked.score.perfect.ns <- data.frame(summarize(group_by(subset(exp3unmarked.score.summary,IsPerfect==1),Day,Animacy,EventType,ProportionMarked,.drop = FALSE),n()))
exp3unmarked.score.perfect.ns <- plyr::rename(exp3unmarked.score.perfect.ns,c("n.."="count"))
ggplot(data=exp3unmarked.score.summary, aes(x=Day, y=score,fill=Animacy,colour=Animacy)) +
#facet by condition and marking
facet_grid(EventType~ProportionMarked) +
#points and CIs for score by animacy
stat_summary(geom='errorbar', fun.data='mean_cl_boot',fun.ymin="min", fun.ymax="max",
width=0.3,position=position_dodge(0.9),colour='black') +
stat_summary(geom='point', fun.y='mean', position=position_dodge(0.9),size=3) +
stat_summary(geom='point', fun.y='mean', position=position_dodge(0.9),size=3,shape=1,colour='black') +
#horizontal line showing chance
geom_hline(yintercept=0.5,linetype=3) +
#by-participant data
geom_dotplot(data=subset(exp3unmarked.score.summary,IsPerfect==0),
aes(x=Day, y=score, shape=Animacy),binaxis = "y",
stackdir = "centerwhole",stackratio=1,alpha=0.5,dotsize=1,
position=position_dodge(0.9),binpositions='all',binwidth=1/100) +
geom_text(data=exp3unmarked.score.perfect.ns,aes(x=Day,y=1.05,label=count),position=position_dodge(0.9),size=3,colour='black') +
#force all points to be circles, and exclude from legend
scale_shape_manual(values=c(19,19),guide=FALSE)+
#then various axis/legend stuff
xlab("Day") +
theme_bw() +
#ylab("Proportion correct responses") +
scale_y_continuous(name="Proportion correct responses",breaks=seq(0,1,0.25)) +
theme(legend.title=element_blank(),legend.position="top") +
scale_fill_manual(values=my.colours[2:3],breaks=c("FALSE", "TRUE"),labels=c("Inanimate patient", "Animate patient")) +
scale_colour_manual(values=my.colours[2:3],breaks=c("FALSE", "TRUE"),labels=c("Inanimate patient", "Animate patient")) +
ggsave("../Figures/exp3-unmarked-identification-accuracy.pdf",width=9, height=9)
exp3Data$ProportionMarked <- relevel(as.factor(exp3Data$ProportionMarked),ref="40% Casemarked")
contrasts(exp3Data$ProportionMarked) <- c(-0.5,0.5)
exp3Data$EventTypeR <- exp3Data$EventType
exp3Data$EventTypeR <- relevel(exp3Data$EventTypeR, ref='Subjects Can Be Objects')
levels(exp3Data$EventTypeR)
exp3Data$EventTypeR <- relevel(exp3Data$EventTypeR, ref='Subjects Can Be Objects')
