{"frames":[{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"glmer(casemarked ~ trialNumberMinus * Animacy * EventType + (1 + \n    trialNumberMinus * Animacy | workerId), data = exp1.to.3interaction.direct.data, \n    family = binomial, control = glmerControl(optimizer = \"bobyqa\", \n        optCtrl = list(maxfun = 50000)))","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"optimizeGlmer(devfun, optimizer = control$optimizer[[1]], restart_edge = if (nAGQ == \n    0) control$restart_edge else FALSE, boundary.tol = if (nAGQ == \n    0) control$boundary.tol else 0, control = control$optCtrl, \n    start = start, nAGQ = 0, verbose = verbose, calc.derivs = FALSE)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"optwrap(optimizer, devfun, start, rho$lower, control = control, \n    adj = adj, verbose = verbose, ...)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"withCallingHandlers(do.call(optfun, arglist), warning = function(w) {\n    curWarnings <<- append(curWarnings, list(w$message))\n})","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"do.call(optfun, arglist)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"(function (par, fn, lower = -Inf, upper = Inf, control = list(), \n    ...) \n{\n    nn <- names(par) ...","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"(function (x) \n{\n    names(x) <- nn\n    fn(x, ...) ...","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"fn(x, ...)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"resp$updateMu(lp0)","line_number":0}],"message":"Error in `contrasts<-`(`*tmp*`, value = contr.funs[1 + isOF[nn]]) : \n  contrasts can be applied only to factors with 2 or more levels\n"}