---
title: "Experiments 1-3 combined"
author: "Kenny Smith and Jennifer Culbertson"
date: "25/11/2019"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
options(width = 250)
library(ggplot2)
library(plyr)
library(dplyr)
library(lme4)
library(stargazer)

#load utility functions
source('../_Utilities.R')

#define colours - don't think Jenny likes these, but easy to change! 
#First one is neutral, e.g. for totals
my.colours <- c("#808080","#EA7D00","#006DE9")
```


# Introduction

This accompanies latex file XXXX. 


# Load the data.

```{r loaddata}

#load exp1 data
exp1Data <- read.csv('../RawData/exp1Data.csv')
exp2Data <- read.csv('../RawData/exp2Data.csv')
exp3Data <- read.csv('../RawData/exp3Data.csv')

exp1.to.3.data <- rbind(exp1Data, exp2Data, exp3Data)

#dset everything to factors
exp1.to.3.data$Day <- as.factor(exp1.to.3.data$Day)
exp1.to.3.data$Experiment<-as.factor(exp1.to.3.data$Experiment) 
exp1.to.3.data$Animacy <- as.factor(exp1.to.3.data$Animacy)
exp1.to.3.data$ProportionMarked <- as.factor(exp1.to.3.data$ProportionMarked)
#force 40% as reference level
exp1.to.3.data$ProportionMarked <- relevel(exp1.to.3.data$ProportionMarked,ref="40% Casemarked")
#force OSV as reference level
exp1.to.3.data$MajorityInputOrder <- as.factor(exp1.to.3.data$MajorityInputOrder)
exp1.to.3.data$MajorityInputOrder <- relevel(exp1.to.3.data$MajorityInputOrder,ref="OSV majority order")
exp1.to.3.data$OrderMarkedMore <- as.factor(exp1.to.3.data$OrderMarkedMore)
exp1.to.3.data$OrderMarkedMore <- relevel(exp1.to.3.data$OrderMarkedMore,ref="OSV marked more")


#at some point we switched terminology in the paper from Agents Can/Cannot be Patients to Subjects Can/Cannot Be Objects - need to correct this throughout
exp1.to.3.data$EventType <- revalue(exp1.to.3.data$EventType,
                              c("Agents Cannot Be Patients"="Subjects Cannot Be Objects",
                                "Agents Can Be Patients"="Subjects Can Be Objects"))

#Subjects Cannot Be Objects needs to be reference level
exp1.to.3.data$EventType <- as.factor(exp1.to.3.data$EventType)
exp1.to.3.data$EventType <- relevel(exp1.to.3.data$EventType,
                                        ref="Subjects Cannot Be Objects")

```

# Counts of participants and participant exclusions per day

```{r all-counts}
#got this from https://stackoverflow.com/questions/12840294/counting-unique-distinct-values-by-group-in-a-data-frame
exp1.to.3.counts.table <- ddply(exp1.to.3.data,~Day,summarise,N=length(unique(workerId)))
exp1.to.3.counts.table

exp1.to.3.scores.by.block <- aggregate(score~workerId+Day+Block,data=exp1.to.3.data,FUN=mean)
exp1.to.3.failed.noun.comprehension <- subset(exp1.to.3.scores.by.block,Block=='NounComprehension2' & score<0.7)
exp1.to.3.failed.sentence.comprehension <- subset(exp1.to.3.scores.by.block,Block=='SentenceComprehension1' & score<0.7)
ddply(exp1.to.3.failed.sentence.comprehension,~Day,summarise,N_excluded=length(unique(workerId)))
```


# Word order and animacy

Want to check for more frequent use of SOV with inanimate patients (= higher use of OSV with animate patients). 


```{r wordorder-collapsed}
exp1.to.3.sov.summary.by.animacy.collapsed <- aggregate(isSOV~Animacy+Day+MajorityInputOrder+workerId,data=subset(exp1.to.3.data,Block=="SentenceTest1" & grammatical),FUN=mean)
#this is aggregating over animacy
exp1.to.3.sov.summary.total.collapsed <- aggregate(isSOV~Day+MajorityInputOrder+workerId,data=subset(exp1.to.3.data,Block=="SentenceTest1" & grammatical),FUN=mean)
#needs to have this column for plotting compatability with casemarking.summary.by.animacy
exp1.to.3.sov.summary.total.collapsed$Animacy <- "All" 

#There are a lot of participants at extreme values in *both* directions here, so need to add text annotations at both ends of the plot.
exp1.to.3.sov.summary.by.animacy.collapsed$IsCeiling <- ifelse(exp1.to.3.sov.summary.by.animacy.collapsed$isSOV==1,1,0)
exp1.to.3.sov.summary.by.animacy.collapsed$IsFloor <- ifelse(exp1.to.3.sov.summary.by.animacy.collapsed$isSOV==0,1,0)

exp1.to.3.sov.summary.by.animacy.collapsed$Day <- droplevels(exp1.to.3.sov.summary.by.animacy.collapsed$Day)

exp1.to.3.allsov.ceiling.ns.collapsed <- data.frame(summarize(group_by(subset(exp1.to.3.sov.summary.by.animacy.collapsed,IsCeiling==1 & Day!=1),Day,Animacy,MajorityInputOrder,.drop = FALSE),n()))
exp1.to.3.allsov.floor.ns.collapsed <- data.frame(summarize(group_by(subset(exp1.to.3.sov.summary.by.animacy.collapsed,IsFloor==1 & Day!=1),Day,Animacy,MajorityInputOrder,.drop = FALSE),n()))
exp1.to.3.allsov.ceiling.ns.collapsed <- plyr::rename(exp1.to.3.allsov.ceiling.ns.collapsed,c("n.."="count"))
exp1.to.3.allsov.floor.ns.collapsed <- plyr::rename(exp1.to.3.allsov.floor.ns.collapsed,c("n.."="count"))

ggplot(data=exp1.to.3.sov.summary.by.animacy.collapsed, aes(x=Day, y=isSOV, fill=Animacy, colour=Animacy)) +
  facet_grid(.~MajorityInputOrder) +
  #points and CIs for word order by animacy
  stat_summary(geom='errorbar', fun.data='mean_cl_boot',fun.ymin="min", fun.ymax="max",width=0.3,position=position_dodge(0.9),color='black') +
  stat_summary(geom='point', fun.y='mean', position=position_dodge(0.9), size=3) +
  stat_summary(geom='point', fun.y='mean', position=position_dodge(0.9), size=3, shape=1, colour='black') +
  
  #point 95CI for grand means
  stat_summary(data=exp1.to.3.sov.summary.total.collapsed,geom='errorbar', 
               fun.data='mean_cl_boot',fun.ymin="min", fun.ymax="max",width=0.15,position=position_dodge(0.9),
               color='black',show.legend = FALSE) +
  stat_summary(data=exp1.to.3.sov.summary.total.collapsed,geom='point', fun.y='mean', position=position_dodge(0.9),
               size=3) +
  stat_summary(data=exp1.to.3.sov.summary.total.collapsed,geom='point', fun.y='mean', position=position_dodge(0.9),
               size=3, shape=1, colour='black') +
  
  #by-participant data
  geom_dotplot(data=subset(exp1.to.3.sov.summary.by.animacy.collapsed,IsCeiling!=1 & IsFloor!=1),aes(x=Day, y=isSOV, shape=Animacy),binaxis = "y", stackdir = "center",alpha=0.5,dotsize=1,position=position_dodge(0.9),binpositions='all',binwidth=1/100) + 
  geom_text(data=exp1.to.3.allsov.ceiling.ns.collapsed,aes(x=Day,y=1.05,label=count),position=position_dodge(0.9),size=3,colour='black') +
  geom_text(data=exp1.to.3.allsov.floor.ns.collapsed,aes(x=Day,y=-0.05,label=count),position=position_dodge(0.9),size=3,colour='black') +
  
  #then various axis/legend stuff
  xlab("Day") + 
  theme_bw() + 
  ylab("Proportion of SOV sentences") + 
  theme(legend.title=element_blank()) + 
  scale_colour_manual(values=my.colours,breaks=c("All","FALSE", "TRUE"),labels=c("All data","Inanimate patient", "Animate patient")) +
  scale_fill_manual(values=my.colours,breaks=c("All","FALSE", "TRUE"),labels=c("All data","Inanimate patient", "Animate patient")) +
  ggsave("../Figures/exp1to3-wordorder-collapsed.pdf",width=9, height=9)
```

```{r exp1.to.3-wordorder-stat,cache=TRUE}
contrasts(exp1.to.3.data$Animacy) <- c(-0.5,0.5)
contrasts(exp1.to.3.data$ProportionMarked) <- c(-0.5,0.5)
contrasts(exp1.to.3.data$MajorityInputOrder) <- c(-0.5,0.5)

exp1.to.3.sovorder.model.1 <- glmer(isSOV ~ Animacy * Day * ProportionMarked * MajorityInputOrder + (1 + Animacy * Day | workerId),data=subset(exp1.to.3.data,Block=="SentenceTest1" & grammatical),family=binomial,control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=50000)))
```

Clear effect of animacy on word order at day 2, marginal interactions suggests this might be lower on days 3--4. Also see a drop in use of SOV over days, as participants learn to use (less preferred) OSV. 

```{r}
summary(exp1.to.3.sovorder.model.1)
```

# Case marking and animacy

Check for the overall pattern of results - any hint of a DOM effect?

```{r exp1to3-casemarking-mashaplot} 
exp1.to.3.casemarking.summary.by.animacy <- aggregate(casemarked~Animacy+Day+ProportionMarked+workerId,data=subset(exp1.to.3.data,Block=="SentenceTest1" & grammatical),FUN=mean)
#this is aggregating over animacy
exp1.to.3.casemarking.summary.total <- aggregate(casemarked~Day+ProportionMarked+workerId,data=subset(exp1.to.3.data,Block=="SentenceTest1" & grammatical),FUN=mean)
#needs to have this column for plotting compatability with casemarking.summary.by.animacy
exp1.to.3.casemarking.summary.total$Animacy <- "All" 

#There are a lot of participants at extreme values in *both* directions here, so need to add text annotations at both ends of the plot.
exp1.to.3.casemarking.summary.by.animacy$IsCeiling <- ifelse(exp1.to.3.casemarking.summary.by.animacy$casemarked==1,1,0)
exp1.to.3.casemarking.summary.by.animacy$IsFloor <- ifelse(exp1.to.3.casemarking.summary.by.animacy$casemarked==0,1,0)

exp1.to.3.casemarking.summary.by.animacy$Day <- droplevels(exp1.to.3.casemarking.summary.by.animacy$Day)

exp1.to.3.casemarking.ceiling.ns.collapsed <- data.frame(summarize(group_by(subset(exp1.to.3.casemarking.summary.by.animacy,IsCeiling==1 & Day!=1),Day,Animacy,ProportionMarked,.drop = FALSE),n()))
exp1.to.3.casemarking.floor.ns.collapsed <- data.frame(summarize(group_by(subset(exp1.to.3.casemarking.summary.by.animacy,IsFloor==1 & Day!=1),Day,Animacy,ProportionMarked,.drop = FALSE),n()))
exp1.to.3.casemarking.ceiling.ns.collapsed <- plyr::rename(exp1.to.3.casemarking.ceiling.ns.collapsed,c("n.."="count"))
exp1.to.3.casemarking.floor.ns.collapsed <- plyr::rename(exp1.to.3.casemarking.floor.ns.collapsed,c("n.."="count"))

#need to specify input split by ProportionMarked
exp1.to.3.inputs <- data.frame(Day=rep(c(1,2,3),2),
                               ProportionMarked=rep(c("40% Casemarked","60% Casemarked"),each=3),
                               casemarked=rep(c(2/5,3/5),each=3))

                          

ggplot(data=exp1.to.3.casemarking.summary.by.animacy, aes(x=Day, y=casemarked,
                                                     colour=Animacy,fill=Animacy)) +
  facet_grid(.~ProportionMarked) +
  #bars and CIs for casemarking by animacy
  stat_summary(geom='errorbar', fun.data='mean_cl_boot',fun.ymin="min", fun.ymax="max",width=0.3,position=position_dodge(0.9),colour='black') + 
  stat_summary(geom='point',fun.y='mean', position=position_dodge(0.9),size=3) +
  stat_summary(geom='point',fun.y='mean', position=position_dodge(0.9),size=3,shape=1,colour='black') +
  
  #point 95CI for grand means
  stat_summary(data=exp1.to.3.casemarking.summary.total,aes(x=Day,y=casemarked),geom='errorbar',
               fun.data='mean_cl_boot',fun.ymin="min",
               fun.ymax="max",width=0.15,position=position_dodge(0.9),
               colour='black',show.legend = FALSE) +
  stat_summary(data=exp1.to.3.casemarking.summary.total,aes(x=Day,y=casemarked),geom='point', fun.y='mean', position=position_dodge(0.9),shape=19,size=3,show.legend = FALSE) +
  stat_summary(data=exp1.to.3.casemarking.summary.total,aes(x=Day,y=casemarked),geom='point', fun.y='mean', position=position_dodge(0.9),shape=1,size=3,colour='black',show.legend = FALSE) +
  
  #horizontal lines showing input
 geom_hline(dat=exp1.to.3.inputs,aes(yintercept=casemarked),linetype=3) +
  
  #by-participant data
  geom_dotplot(data=subset(exp1.to.3.casemarking.summary.by.animacy,IsCeiling!=1 & IsFloor!=1),aes(x=Day, y=casemarked, shape=Animacy),binaxis = "y", stackdir = "center",alpha=0.5,dotsize=1,position=position_dodge(0.9),binpositions='all',binwidth=1/100) + 
  geom_text(data=exp1.to.3.casemarking.ceiling.ns.collapsed,aes(x=Day,y=1.05,label=count),position=position_dodge(0.9),size=3,colour='black') +
  geom_text(data=exp1.to.3.casemarking.floor.ns.collapsed,aes(x=Day,y=-0.05,label=count),position=position_dodge(0.9),size=3,colour='black') +
  
  #geom_point(aes(x=Day, y=casemarked, shape=Animacy),alpha=0.2,dotsize=1,position=position_jitterdodge(jitter.width= 0.2, jitter.height = 0,dodge.width = 0.9),fill='black') + 
  #force all points to be circles, and exclude from legend
  scale_shape_manual(values=c(21,21),guide=FALSE)+
  #then various axis/legend stuff
  xlab("Day") + 
  theme_bw() + 
  ylab("Proportion of case-marked patients") + 
  theme(legend.title=element_blank()) + 
  scale_fill_manual(values=my.colours,breaks=c("All","FALSE", "TRUE"),labels=c("All data","Inanimate patient", "Animate patient")) +
  scale_colour_manual(values=my.colours,breaks=c("All","FALSE", "TRUE"),labels=c("All data","Inanimate patient", "Animate patient")) +
  ggsave("../Figures/exp1to3-casemarking.pdf",width=9, height=6)

```


```{r exp1.to.3-casemarking-stat-1,cache=TRUE}
exp1.to.3.data$Animacy <- factor(exp1.to.3.data$Animacy)
contrasts(exp1.to.3.data$Animacy) <- c(-0.5,0.5)
contrasts(exp1.to.3.data$EventType) <- c(-0.5,0.5)
contrasts(exp1.to.3.data$ProportionMarked) <- c(-0.5,0.5)
contrasts(exp1.to.3.data$MajorityInputOrder) <- c(-0.5,0.5)
contrasts(exp1.to.3.data$OrderMarkedMore) <- c(-0.5,0.5)

exp1.to.3.case.marking.model.1 <- glmer(casemarked ~ Animacy * ProportionMarked * OrderMarkedMore * EventType* Day + (1 + Animacy * Day | workerId),data=subset(exp1.to.3.data,Block=="SentenceTest1" & grammatical),family=binomial,control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=50000)))
```

Day 2 shows no overall effect of animacy but the animacy * proportion interaction predicted under typicality alignment, which significantly reverses by day 4. Nothing else that is anywhere near significant involves animacy.

```{r}
summary(exp1.to.3.case.marking.model.1)
```

Model comparison, +/- the interaction between animacy and proportion?
```{r all-data-comparison,cache=TRUE}
comparison.model.a <- glmer(casemarked ~ (Animacy + ProportionMarked) * Day + (1 + Animacy * Day | workerId),data=subset(exp1.to.3.data,Block=="SentenceTest1" & grammatical),family=binomial,control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=50000)))

comparison.model.b <- glmer(casemarked ~ Animacy * ProportionMarked * Day + (1 + Animacy * Day | workerId),data=subset(exp1.to.3.data,Block=="SentenceTest1" & grammatical),family=binomial,control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=50000)))
```

The model with the interaction is a significiantly better fit.
```{r}
anova(comparison.model.a,comparison.model.b)
```

Model controlling for word order.

```{r exp1.to.3-casemarking-stat-2,cache=TRUE}
contrasts(exp1.to.3.data$WordOrder) <- c(-0.5,0.5)

exp1.to.3.case.marking.model.3 <- glmer(casemarked ~ Animacy * Day * ProportionMarked * OrderMarkedMore 
                                        * (EventType + WordOrder) 
                                   + (1  | workerId)
                                   + (0 + Animacy + Day + WordOrder | workerId),
                                   data=subset(exp1.to.3.data,Block=="SentenceTest1" & grammatical),
                                   family=binomial,control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=100000)))

```


The model shows the same crucial results as the main model - a (marginal) negative of animacy at day 2, animacy interacts with ProportionMarked on day 2 in the direction predicted by typicality alignment, and both of these effects reverse at day 4. Additionally, a striking effect of word order on case marking (more SOV leads to less case marking).

```{r}
summary(exp1.to.3.case.marking.model.3)
car::vif(exp1.to.3.case.marking.model.3)
```





# Case marking and animacy during interaction

```{r exp1.to.3-interaction-data}

#since there is some data munging here, will set this up as a seperate data frame
exp1.to.3RecallVsInteractionData <- subset(exp1.to.3.data,(Block=="Interaction" | Block=="SentenceTest1") & grammatical & Day==4)
#want recall to be the reference level
exp1.to.3RecallVsInteractionData$Block <- relevel(droplevels(exp1.to.3RecallVsInteractionData$Block),ref="SentenceTest1")

exp1.to.3.recall.vs.interaction.summary <- aggregate(casemarked~Animacy+Block+EventType+ProportionMarked+workerId,data=exp1.to.3RecallVsInteractionData,FUN=mean)
#this is aggregating over animacy
exp1.to.3.recall.vs.interaction.summary.total <- aggregate(casemarked~Block+EventType+ProportionMarked+workerId,data=exp1.to.3RecallVsInteractionData,FUN=mean)

#prettier names for printing
exp1.to.3.recall.vs.interaction.summary$Block <- revalue(exp1.to.3.recall.vs.interaction.summary$Block,
                                         c("SentenceTest1"="Recall",
                                           "Interaction"="Interaction"))
exp1.to.3.recall.vs.interaction.summary.total$Block <- revalue(exp1.to.3.recall.vs.interaction.summary.total$Block,
                                         c("SentenceTest1"="Recall",
                                           "Interaction"="Interaction"))
exp1.to.3.recall.vs.interaction.summary.total$Animacy <- "All" 
```

```{r exp1.to.3-interaction-plot}

ggplot(data=exp1.to.3.recall.vs.interaction.summary, aes(x=Block, y=casemarked, 
                                                    colour=Animacy, fill=Animacy)) +
  facet_grid(EventType~ProportionMarked) +
  #points and CIs for casemarking by animacy
  stat_summary(geom='errorbar', fun.data='mean_cl_boot',fun.ymin="min", fun.ymax="max",width=0.3,position=position_dodge(0.9),color='black') + 
  stat_summary(geom='point', fun.y='mean', position=position_dodge(0.9),size=3) +
  stat_summary(geom='point', fun.y='mean', position=position_dodge(0.9),size=3,
               shape=1,colour='black') +
  
  #point 95CI for grand means
  stat_summary(data=exp1.to.3.recall.vs.interaction.summary.total,
                geom='errorbar', fun.data='mean_cl_boot',fun.ymin="min",
                fun.ymax="max",width=0.15,position=position_dodge(0.9),
                color='black',show.legend = FALSE) +
  stat_summary(data=exp1.to.3.recall.vs.interaction.summary.total,geom='point', 
               fun.y='mean', position=position_dodge(0.9),size=3) +
  stat_summary(data=exp1.to.3.recall.vs.interaction.summary.total,geom='point', 
               fun.y='mean', position=position_dodge(0.9),size=3,
               shape=1,colour='black') +
   
  #horizontal lines showing input
  geom_hline(dat=exp1.to.3.inputs,aes(yintercept=casemarked),linetype=3) +
  #by-participant data
  geom_dotplot(aes(x=Block, y=casemarked, shape=Animacy),binaxis = "y", stackdir = "center",alpha=0.5,dotsize=1.5,position=position_dodge(0.9),binpositions='all',binwidth=1/100) + 
  #then various axis/legend stuff
  xlab("Block") + 
  theme_bw() + 
  ylab("Proportion of case-marked patients") + 
  theme(legend.title=element_blank()) + 
  scale_colour_manual(values=my.colours,breaks=c("All","FALSE", "TRUE"),labels=c("All data","Inanimate patient", "Animate patient")) + 
  scale_fill_manual(values=my.colours,breaks=c("All","FALSE", "TRUE"),labels=c("All data","Inanimate patient", "Animate patient")) + 
  ggsave("../Figures/exp1to3-interaction-casemarking.pdf",width=9, height=6)
```

Same plot collapsing over ProportionMarked (since those effects are gone by day 4 anyway).

```{r exp1.to.3-interaction-data-collapsed}

exp1.to.3.recall.vs.interaction.summary.collapsed <- aggregate(casemarked~Animacy+Block+EventType+workerId,data=exp1.to.3RecallVsInteractionData,FUN=mean)
#this is aggregating over animacy
exp1.to.3.recall.vs.interaction.summary.total.collapsed <- aggregate(casemarked~Block+EventType+workerId,data=exp1.to.3RecallVsInteractionData,FUN=mean)

#prettier names for printing
exp1.to.3.recall.vs.interaction.summary.collapsed$Block <- revalue(exp1.to.3.recall.vs.interaction.summary.collapsed$Block,
                                         c("SentenceTest1"="Recall",
                                           "Interaction"="Interaction"))
exp1.to.3.recall.vs.interaction.summary.total.collapsed$Block <- revalue(exp1.to.3.recall.vs.interaction.summary.total.collapsed$Block,
                                         c("SentenceTest1"="Recall",
                                           "Interaction"="Interaction"))
exp1.to.3.recall.vs.interaction.summary.total.collapsed$Animacy <- "All" 
```

```{r exp1.to.3-interaction-plot-collapsed}

ggplot(data=exp1.to.3.recall.vs.interaction.summary.collapsed, aes(x=Block, y=casemarked, 
                                                    colour=Animacy, fill=Animacy)) +
  facet_grid(EventType~.) +
  #points and CIs for casemarking by animacy
  stat_summary(geom='errorbar', fun.data='mean_cl_boot',fun.ymin="min", fun.ymax="max",width=0.3,position=position_dodge(0.9),color='black') + 
  stat_summary(geom='point', fun.y='mean', position=position_dodge(0.9),size=3) +
  stat_summary(geom='point', fun.y='mean', position=position_dodge(0.9),size=3,
               shape=1,colour='black') +
  
  #point 95CI for grand means
  stat_summary(data=exp1.to.3.recall.vs.interaction.summary.total.collapsed,
                geom='errorbar', fun.data='mean_cl_boot',fun.ymin="min",
                fun.ymax="max",width=0.15,position=position_dodge(0.9),
                color='black',show.legend = FALSE) +
  stat_summary(data=exp1.to.3.recall.vs.interaction.summary.total.collapsed,geom='point', 
               fun.y='mean', position=position_dodge(0.9),size=3) +
  stat_summary(data=exp1.to.3.recall.vs.interaction.summary.total.collapsed,geom='point', 
               fun.y='mean', position=position_dodge(0.9),size=3,
               shape=1,colour='black') +
   
  #horizontal lines showing input
  geom_hline(aes(yintercept=0.5),linetype=3) +
  #by-participant data
  geom_dotplot(aes(x=Block, y=casemarked, shape=Animacy),binaxis = "y", stackdir = "center",alpha=0.5,dotsize=1.5,position=position_dodge(0.9),binpositions='all',binwidth=1/100) + 
  #then various axis/legend stuff
  xlab("Block") + 
  theme_bw() + 
  ylab("Proportion of case-marked patients") + 
  theme(legend.title=element_blank()) + 
  scale_colour_manual(values=my.colours,breaks=c("All","FALSE", "TRUE"),labels=c("All data","Inanimate patient", "Animate patient")) + 
  scale_fill_manual(values=my.colours,breaks=c("All","FALSE", "TRUE"),labels=c("All data","Inanimate patient", "Animate patient")) + 
  ggsave("../Figures/exp1to3-interaction-casemarking-collapsed.pdf",width=9, height=6)
```

Stat where block is treatment-coded.
```{r exp1.to.3-interaction-stat,cache=TRUE}
exp1.to.3RecallVsInteractionData$Animacy <- factor(exp1.to.3RecallVsInteractionData$Animacy)
contrasts(exp1.to.3RecallVsInteractionData$Animacy) <- c(-0.5,0.5)
contrasts(exp1.to.3RecallVsInteractionData$EventType) <- c(-0.5,0.5)

exp1.to.3.recall.vs.interaction.model.1 <- glmer(casemarked ~ Animacy * Block * EventType + (1 + Animacy *  Block | workerId),data=exp1.to.3RecallVsInteractionData,family=binomial,control=glmerControl(optimizer="bobyqa"))
```

A highly significant effect of Block=interaction *and* an interaction of animacy and Block -i.e. you get DOM when in interaction. Plus a significant effect of EventType, i.e. this effect is amplified when genuine ambiguity ensues. 

```{r}
summary(exp1.to.3.recall.vs.interaction.model.1)
```




What does the timecourse of marking look like - do participants realise they need to start marking even in the Subjects Cannot Be Objects condition? Data is quite noisy!

```{r}
#add by-participant trial counter, setting first direct trial as 1
exp1.to.3interaction.direct.data <- subset(exp1.to.3RecallVsInteractionData,Block=="Interaction")
exp1.to.3interaction.direct.data$trialNumber <- plyr::ddply(exp1.to.3interaction.direct.data, plyr::.(workerId), plyr::mutate, id = seq_along(trialn))$id
exp1.to.3interaction.direct.data$casemarked <- as.numeric(exp1.to.3interaction.direct.data$casemarked)

ggplot(exp1.to.3interaction.direct.data,aes(x=trialNumber,y=casemarked,colour=Animacy)) +
  facet_grid(~EventType) +
  stat_summary(geom='line', fun.y='mean', position=position_dodge(0.9)) +
  stat_summary(data=subset(exp1.to.3interaction.direct.data,(trialNumber)%%5==0),geom='errorbar', fun.data='mean_cl_boot',fun.ymin="min", fun.ymax="max",width=0.3,position=position_dodge(0.9)) +
  #then various axis/legend stuff
  xlab("Trial number") + 
  theme_bw() + 
  ylab("Proportion of case-marked patients") + 
  theme(legend.title=element_blank()) + 
  scale_colour_manual(values=my.colours[c(2:3)],breaks=c("FALSE", "TRUE"),labels=c("Inanimate patient", "Animate patient")) 
  
```

Smoothing the plot by binning by trial number.

```{r}
exp1.to.3interaction.direct.data$trialNumberBinned <- (exp1.to.3interaction.direct.data$trialNumber-1) %/% 5
ggplot(exp1.to.3interaction.direct.data,aes(x=trialNumberBinned,y=casemarked,colour=Animacy)) +
  facet_grid(EventType~.) +
  stat_summary(geom='line', fun.y='mean') +
  stat_summary(geom='errorbar', fun.data='mean_cl_boot',fun.ymin="min", fun.ymax="max",width=0.2,position=position_dodge(0.2)) +
  #then various axis/legend stuff
  xlab("Trial number") + 
  theme_bw() + 
  ylab("Proportion of case-marked patients") + 
  theme(legend.title=element_blank()) + 
  scale_colour_manual(values=my.colours[c(2:3)],breaks=c("FALSE", "TRUE"),labels=c("Inanimate patient", "Animate patient")) +
  scale_x_continuous(breaks=0:7,labels=c("1-5","6-10","11-15","16-20","21-25","26-30","30-35","36-40")) +
  ggsave("../Figures/exp1to3-interaction-timecourse.pdf",width=9, height=6)

  
```

Model with treatment-coding - shows that participants in the SubjectsCannot condition start out by *not* differentiating based on animacy (n.s. effect of animacy), but then increasingly do so (animacy x trialN); in the SubjectsCan condition they differentiate from the start (animacy x SubjectsCan), but don't increase this over trials (- interaction of animacy x trialN x SubjectsCan).

```{r exp1to3-casemarking-timecourse-stat-1, cache=TRUE}
exp1.to.3interaction.direct.data$trialNumberMinus <- exp1.to.3interaction.direct.data$trialNumber-1
contrasts(exp1.to.3interaction.direct.data$EventType) <- NULL
contrasts(exp1.to.3interaction.direct.data$Animacy) <- c(-0.5,0.5)

exp1.to.3casemarking.timecourse.model.1 <- glmer(casemarked ~ trialNumberMinus*Animacy * EventType + (1 + trialNumberMinus*Animacy | workerId),data=exp1.to.3interaction.direct.data,family=binomial,control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=50000)))

summary(exp1.to.3casemarking.timecourse.model.1)
```



# Word order variability and casemarking

## Word order variability and DOM

Do participants who vary word order more (i.e. word order is less informative about argument structure) differentiate more? 

Measure of word order variability: entropy.

Measure of DOM: % marked animate patients - % marked inanimate patients

Will look at day 4 and contrast recall and interaction.
```{r}
exp1.to.3.proportion.sov <- aggregate(isSOV~EventType+Day+Block+workerId,data=subset(exp1.to.3.data,Day==4 & (Block=="SentenceTest1" | Block=="Interaction") & grammatical),FUN=mean)

exp1.to.3.proportion.sov$Block <- revalue(exp1.to.3.proportion.sov$Block,
                                         c("SentenceTest1"="Recall",
                                           "Interaction"="Interaction"))
exp1.to.3.proportion.sov$Block <- relevel(exp1.to.3.proportion.sov$Block,ref="Recall")

#add word order entropy
exp1.to.3.proportion.sov$Entropy <- mapply(function(p) ifelse(p==0|p==1,0,(-p*log2(p)) + (-(1-p)*log2(1-p))),
                                           exp1.to.3.proportion.sov$isSOV)       

#OK, for DOM score can use existing exp1.to.3.recall.vs.interaction.summary as basis
#but need to calculate diffs - easiest way is to make 2 columns giving % casemarked for animate and inanimate patients
exp1.to.3.domscore <- tidyr::spread(exp1.to.3.recall.vs.interaction.summary,Animacy,casemarked)
exp1.to.3.domscore$DOM <- exp1.to.3.domscore$'TRUE' - exp1.to.3.domscore$'FALSE'
exp1.to.3.domscore$'FALSE' <- NULL
exp1.to.3.domscore$'TRUE' <- NULL

#now merge
exp1.to.3.entropy.dom <- merge(exp1.to.3.proportion.sov,exp1.to.3.domscore,
                               by=c("workerId","EventType","Block"))
```

Looks strikingly like no correspondence in either case.
```{r}
#and plot
ggplot(exp1.to.3.entropy.dom,aes(x=Entropy,y=DOM)) +
  facet_grid(EventType~Block) +
  geom_point()
```

Appropriate stat? Result suggests no significant effect of word order variability on casemarking in either block.
```{r}
summary(lmer(DOM~Entropy * Block * EventType + (1 | workerId), data=exp1.to.3.entropy.dom))
```

Same stat excluding 0-word-order-entropy individuals.

```{r}
summary(lmer(DOM~Entropy * Block * EventType + (1 | workerId), data=subset(exp1.to.3.entropy.dom,Entropy>0)))
```

## Word order variability and casemarking overall

Do participants who vary word order more (i.e. word order is less informative about argument structure) casemark more, irrespective of animacy? 

Measure of word order variability: entropy.

Measure of casemarking: % marked patients.

Will look at day 4 and contrast recall and interaction.
```{r}

#for casemarking
exp1.to.3.casemarking <- aggregate(casemarked~EventType+Day+Block+workerId,data=subset(exp1.to.3.data,Day==4 & (Block=="SentenceTest1" | Block=="Interaction") & grammatical),FUN=mean)


exp1.to.3.casemarking$Block <- revalue(exp1.to.3.casemarking$Block,
                                         c("SentenceTest1"="Recall",
                                           "Interaction"="Interaction"))
exp1.to.3.casemarking$Block <- relevel(exp1.to.3.casemarking$Block,ref="Recall")

#now merge
exp1.to.3.entropy.marking <- merge(exp1.to.3.proportion.sov,exp1.to.3.casemarking,
                               by=c("workerId","EventType","Block"))
```

Looks strikingly like no correspondence in either case.
```{r}
#and plot
ggplot(exp1.to.3.entropy.marking,aes(x=Entropy,y=casemarked)) +
  facet_grid(EventType~Block) +
  geom_point(alpha=0.5)

#and plot
ggplot(exp1.to.3.entropy.marking,aes(x=Entropy,y=casemarked)) +
  facet_grid(~Block) +
  geom_point(alpha=0.5)

```

Appropriate stat? Result suggests no significant effect of word order variability on casemarking in either Block.
```{r}
contrasts(exp1.to.3.entropy.marking$EventType) <- c(-0.5,0.5)
summary(lmer(casemarked~Entropy * Block * EventType + (1 | workerId), data=exp1.to.3.entropy.marking))
```

Same stat excluding 0-word-order-entropy individuals.

```{r}
summary(lmer(casemarked~Entropy * Block * EventType + (1 | workerId), data=subset(exp1.to.3.entropy.marking,Entropy>0)))
```
